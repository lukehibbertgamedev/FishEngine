
Future Todo:
	
	- [ ] Optimise the cube primitive rendering (currently 24 vertices, should really only be 8)
	- [ ] Fix the rotation origin point for each render object (currently not around the origin)
	- [ ] Privatise unnecessary variables and provide const correct accessors

Previously:
	- [X] Recreated a new project using Vulkan and SDL as opposed to Vulkan and GLFW.		05/06
	- [X] Build the cmake files using cmake-gui.											05/06

	- [X] Follow the code walkthrough tutorial of the vulkan guide							07/06

	- [X] Completed chapter 1 of the vulkan guide, initialising vulkan						08/06 *
	- [X] Fix issue from chapter 1 (no entry point for vkQueueSubmit2() found)				08/06
	- [X] Fixed API issue (it cannot be fixed). Driver does not support 1.3					08/06
	- [X] Moved on from all issues, converted to the Legacy Guide and caught up				08/06
	- [X] Set up and load triangle shader completed											08/06
	 
	- [X] Pipeline set up and triangle rendering											14/06
	- [X] Passing colour data through the shader data to render coloured triangle			14/06
	- [X] Refactoring using a deletion queue												14/06
	- [X] Completed chapter 2 of the vulkan guide, the graphics pipeline					14/06 *
	- [X] Updated the Vulkan API to version 1.3												14/06 *
	- [X] Fix the issue regarding VmaAllocator, seems to be using Vk 1.3					14/06

	- [X] Swap between the 3 pipelines defined												14/06
	- [X] Refactor selected shader to be enum												14/06
	- [X] Refactor some code and add comments where needed									14/06
	- [X] Merge this branch into develop and branch off to Feature/Renderer					14/06
	- [X] Implemented spinning triangle with camera position and view matrix				14/06
	- [X] Implemented depth buffer to fix and complete model loading for one model			14/06
 	- [X] Complete chapter 3 of the vulkan guide, drawing meshes							14/06 *
	- [X] Implemented double-buffering														14/06

	- [X] Implemented descriptor sets (including dynamic)									19/06
	- [X] Implemented storage buffers														19/06
	- [X] Complete chapter 4 of the vulkan guide, buffers and shader input/output			19/06 *
	- [X] Implemented memory transfers														19/06
	- [X] Implemented a texture load function												19/06
	- [X] Implemented texture loading and rendering											19/06
	- [X] Complete chapter 5 of the vulkan guide, textures									19/06 *

	- [X] Implement the ImGui section of the vulkan guide									20/06 *
	- [X] Open the ImGui demo window														20/06
	- [X] Custom ImGui window with timer metrics											20/06
	- [X] Refactor engine to use resource manager and scenes								20/06

	- [X] Added WASD/QE control to the camera												22/06
	- [X] Further abstracted vk_engine.h separating gpu data and pipeline builder			22/06

	- [X] Added toggle for the camera mouse motion											23/06
	- [X] Hardcoded runtime movement for the horse model									23/06
	- [X] Modify horse at runtime (position, rotation, scale)								23/06
	- [X] Quad primitive rendering															23/06

	- [X] Cube primitive rendering															01/07

Next time:

	- [ ] Render several different models using different textures (see https://kylehalladay.com/blog/tutorial/vulkan/2018/01/28/Textue-Arrays-Vulkan.html)

	- [ ] Sort the render objects container before rendering by Pipeline and Mesh, reducing number of binds (see Chpt 3)

	- [ ] Go through the console window on termination and attempt to clear the validation errors/warnings

	- [ ] Refactor all code to match the 1.3 support for Vulkan